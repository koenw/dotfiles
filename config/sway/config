# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

#xwayland disable

set $term alacritty
set $launcher wofi --show drun --allow-images --gtk-dark | xargs swaymsg exec --
set $lock swaylock -f swaylock -c 000000 --image ~/.config/awesome/themes/wallpaper.png --indicator-caps-lock --indicator-radius=100
set $wobsock $XDG_RUNTIME_DIR/wob.sock
set $woblock $XDG_RUNTIME_DIR/wob.lock
set $wobsock_laptop $XDG_RUNTIME_DIR/wob_laptop.sock
set $woblock_laptop $XDG_RUNTIME_DIR/wob_laptop.lock

output * bg ~/.config/sway/wallpapers/wallpaper fill


smart_borders no_gaps
smart_gaps on
default_border pixel 2
#default_border none

exec swayidle -w \
  timeout 6000 $lock \
  timeout 6600 'swaymsg "output * dpms off"' \
  resume 'swaymsg "output * dpms on"' \
  before-sleep 'swaylock -f -c 000000'

exec --no-startup-id flashfocus
exec wlsunset -l 52.09157204738723 -L 5.051661491039833
exec_always sh -c "(test -e $wobsock || mkfifo $wobsock); tail -f $wobsock | wob --bar-color '#99FFFFFF' --background-color '#99000000' --border 0 --padding 0"
exec_always sh -c "(test -e $wobsock_laptop || mkfifo $wobsock_laptop); tail -f $wobsock_laptop | wob --output eDP-1 --bar-color '#99FFFFFF' --background-color '#99000000' --border 0 --padding 0"

exec --no-startup-id fcitx5 -d

#exec_always ibus-daemon --xim --restart --replace

input type:keyboard {
  xkb_options caps:escape,eurosign:5
  xkb_layout "us"
  xkb_variant "altgr-intl"
}

input type:touchpad {
  middle_emulation disabled
}

# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+w kill

# Start your launcher
bindsym $mod+space exec $launcher
bindsym $mod+p exec $launcher

# Reload the configuration file
bindsym $mod+Shift+r reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Lock the screen
bindsym alt+ctrl+l exec $lock

#
# Media
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

bindsym --locked XF86MonBrightnessUp exec light -A 1% && light -G | cut -d'.' -f1 > $wobsock_laptop
bindsym --locked XF86MonBrightnessDown exec light -U 1% && light -G |cut -d'.' -f1 > $wobsock_laptop

bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1% && pamixer --get-volume > $wobsock
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1% && pamixer --get-volume > $wobsock
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && ( pamixer --get-mute && echo 0 > $wobsock || pamixer --get-volume > $wobsock )
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Grab a screenshot from the focused window
bindsym Print exec grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | wl-copy -p -t image/png
bindsym Print+ctrl exec grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" ~/media/screenshots/$(date '+%Y-%m-%d_%H_%M_%S')_$(hostname).png
# Select a region and screenshoot it
bindsym Print+Shift exec grim -g "$(slurp)" - | wl-copy -t image/png
bindsym Print+Shift+ctrl exec grim -g "$(slurp)" - | ~/media/screenshots/$(date '+%Y-%m-%d_%H_%M_%S')_$(hostname).png

mouse_warping output

bindsym $mod+ctrl+j focus prev
bindsym $mod+ctrl+k focus next

bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+o focus output right
bindsym $mod+shift+o move workspace output right; focus output right


#
# Workspaces:
#

#workspace term output eDP-1
#assign [app_id="term"] workspace term
#exec $term --class term

    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace term
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace term
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Swap focus between the tiling area and the floating area
    bindsym $mod+control+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

  #
  # Scratchpad:
  #
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+n move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+n scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

bar {
  swaybar_command waybar
}
